browser()
x <- round(mean(data$variable), 0)
browser()
return(x)
}
aveAge <- average(homes, age)
x
x
round(mean(homes$age), 0)
average <- function(data, x) {
x <- round(mean(data$x), 0)
return(x)
}
aveAge <- average(homes, age)
average <- function(test, x) {
x <- round(mean(test$x), 0)
return(x)
}
aveAge <- average(homes, age)
average <- function(test, x) {
x <- round(mean(test$x), 0)
browser()
return(x)
}
aveAge <- average(homes, age)
x
aveAge <- average(homes, 'age')
aveAge <- average(homes, 'age')
x
average <- function(x, y) {
z <- (x*y)/2
return(z)
}
average(1,2)
average(1,3)
square <- function(x) {
return(x^2)
}
x <- square(2)
x
aveAge <- round(mean(homes$price), 0)
aveAge
aveAge <- round(mean(homes$age), 0)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
x <- rnorm(1000)
y <- rnorm(1000)
summary <- lm(y ~ x)
summary
homes <- read.csv("homePriceData.csv")
avePrice <- round(mean(homes$price),2)
aveAge <- round(mean(homes$age), 0)
square <- function(x) {
return(x^2)
}
rm(square)
square <- function(x) {
return(x^2)
}
save.image("~/Desktop/useR2012/example.RData")
x <- rnorm(1000)
y <- rnorm(1000)
summary <- lm(y ~ x)
load("~/Desktop/useR2012/example.RData")
djiaPrices <- read.csv("~/Desktop/useR2012/djiaPrices.csv")
View(djiaPrices)
matrix(0, nrow=2, ncol=2)
setwd("~/Desktop/useR2012/data")
setwd("~/Desktop/useR2012")
x <- rnorm(1000)
y <- rnorm(1000)
plot(x,y)
abline(x~y)
abline(lm(x~y))
plot(cars)
abline(lm(cars$dist ~ cars$speed))
plot.new()
pushViewport(viewport(xscale=c(0, 1), yscale=c(0.5, 1),
clip=TRUE))
res <- 50
for (i in 1:res)
grid.rect(y=1 - (i-1)/res, just="top",
gp=gpar(col=NULL, fill=grey(0.5*i/res)))
moon <- function(x, y, size) {
angle <- seq(-90, 90, length=50)/180*pi
x1 <- x + size*cos(angle)
y1 <- y + size*sin(angle)
mod <- 0.8
x2 <- x + mod*(x1 - x)
grid.polygon(c(x1, rev(x2)), c(y1, rev(y1)),
default.unit="native",
gp=gpar(col=NULL, fill="white"))
}
moon(.1, .9, .03)
star <- function(x, y, size) {
x1 <- c(x,           x + size*.1, x + size*.5, x + size*.1,
x,           x - size*.1, x - size*.5, x - size*.1) + .05
y1 <- c(y - size,    y - size*.1, y,           y + size*.1,
y + size*.7, y + size*.1, y,           y - size*.1) + .05
grid.polygon(x1, y1,
default.unit="native",
gp=gpar(col=NULL, fill="white"))
}
star(.5, .7, .02)
star(.8, .9, .02)
star(.72, .74, .02)
star(.62, .88, .02)
grid.circle(runif(20, .2, 1), runif(20, .6, 1), r=.002,
default.unit="native",
gp=gpar(col=NULL, fill="white"))
hill <- function(height=0.1, col="black") {
n <- 100
x <- seq(0, 1, length=n)
y1 <- sin(runif(1) + x*2*pi)
y2 <- sin(runif(1) + x*4*pi)
y3 <- sin(runif(1) + x*8*pi)
y <- 0.6 + height*((y1 + y2 + y3)/3)
grid.polygon(c(x, rev(x)), c(y, rep(0, n)),
default.unit="native",
gp=gpar(col=NULL, fill=col))
}
hill()
rdir <- function(n) {
sample(seq(-45, 45, length=10), n)/180*pi
}
grid.text("Once upon a time ...",
x=.15, y=.51, just="bottom",
default.unit="native",
gp=gpar(col="white", fontface="italic", fontsize=10))
popViewport()
#grid.rect()
dev.off()
plot.new()
pushViewport(viewport(xscale=c(0, 1), yscale=c(0.5, 1),
clip=TRUE))
res <- 50
for (i in 1:res)
grid.rect(y=1 - (i-1)/res, just="top",
gp=gpar(col=NULL, fill=grey(0.5*i/res)))
moon <- function(x, y, size) {
angle <- seq(-90, 90, length=50)/180*pi
x1 <- x + size*cos(angle)
y1 <- y + size*sin(angle)
mod <- 0.8
x2 <- x + mod*(x1 - x)
grid.polygon(c(x1, rev(x2)), c(y1, rev(y1)),
default.unit="native",
gp=gpar(col=NULL, fill="white"))
}
moon(.1, .9, .03)
star <- function(x, y, size) {
x1 <- c(x,           x + size*.1, x + size*.5, x + size*.1,
x,           x - size*.1, x - size*.5, x - size*.1) + .05
y1 <- c(y - size,    y - size*.1, y,           y + size*.1,
y + size*.7, y + size*.1, y,           y - size*.1) + .05
grid.polygon(x1, y1,
default.unit="native",
gp=gpar(col=NULL, fill="white"))
}
star(.5, .7, .02)
star(.8, .9, .02)
star(.72, .74, .02)
star(.62, .88, .02)
grid.circle(runif(20, .2, 1), runif(20, .6, 1), r=.002,
default.unit="native",
gp=gpar(col=NULL, fill="white"))
hill <- function(height=0.1, col="black") {
n <- 100
x <- seq(0, 1, length=n)
y1 <- sin(runif(1) + x*2*pi)
y2 <- sin(runif(1) + x*4*pi)
y3 <- sin(runif(1) + x*8*pi)
y <- 0.6 + height*((y1 + y2 + y3)/3)
grid.polygon(c(x, rev(x)), c(y, rep(0, n)),
default.unit="native",
gp=gpar(col=NULL, fill=col))
}
hill()
rdir <- function(n) {
sample(seq(-45, 45, length=10), n)/180*pi
}
grid.text("Once upon a time ...",
x=.15, y=.51, just="bottom",
default.unit="native",
gp=gpar(col="white", fontface="italic", fontsize=10))
popViewport()
#grid.rect()
library(grid)
plot.new()
pushViewport(viewport(xscale=c(0, 1), yscale=c(0.5, 1),
clip=TRUE))
res <- 50
for (i in 1:res)
grid.rect(y=1 - (i-1)/res, just="top",
gp=gpar(col=NULL, fill=grey(0.5*i/res)))
moon <- function(x, y, size) {
angle <- seq(-90, 90, length=50)/180*pi
x1 <- x + size*cos(angle)
y1 <- y + size*sin(angle)
mod <- 0.8
x2 <- x + mod*(x1 - x)
grid.polygon(c(x1, rev(x2)), c(y1, rev(y1)),
default.unit="native",
gp=gpar(col=NULL, fill="white"))
}
moon(.1, .9, .03)
star <- function(x, y, size) {
x1 <- c(x,           x + size*.1, x + size*.5, x + size*.1,
x,           x - size*.1, x - size*.5, x - size*.1) + .05
y1 <- c(y - size,    y - size*.1, y,           y + size*.1,
y + size*.7, y + size*.1, y,           y - size*.1) + .05
grid.polygon(x1, y1,
default.unit="native",
gp=gpar(col=NULL, fill="white"))
}
star(.5, .7, .02)
star(.8, .9, .02)
star(.72, .74, .02)
star(.62, .88, .02)
grid.circle(runif(20, .2, 1), runif(20, .6, 1), r=.002,
default.unit="native",
gp=gpar(col=NULL, fill="white"))
hill <- function(height=0.1, col="black") {
n <- 100
x <- seq(0, 1, length=n)
y1 <- sin(runif(1) + x*2*pi)
y2 <- sin(runif(1) + x*4*pi)
y3 <- sin(runif(1) + x*8*pi)
y <- 0.6 + height*((y1 + y2 + y3)/3)
grid.polygon(c(x, rev(x)), c(y, rep(0, n)),
default.unit="native",
gp=gpar(col=NULL, fill=col))
}
hill()
rdir <- function(n) {
sample(seq(-45, 45, length=10), n)/180*pi
}
grid.text("Once upon a time ...",
x=.15, y=.51, just="bottom",
default.unit="native",
gp=gpar(col="white", fontface="italic", fontsize=10))
popViewport()
#grid.rect()
hist(x,y)
hist(x)
par(mfrow=c(1,1))
groups <- c("cows","sheep","horses", "elephants","giraffes")
males <- sample(1:10, 5)
females <- sample(1:10, 5)
par(mar=c(0.5,5, 0.5, 1))
plot.new()
plot.window(xlim=c(-10,10), ylim=c(-1.5,5.5))
ticks <- seq(-10,10,5)
y <- 1:5
h <- 0.2
lines(rep(0,2), c(-1.5,5.5), col="grey")
segments(-10,y,10,y, lty="dotted")
rect(-males, y-h, 0, y+h, col="blue")
rect(0,y-h, females, y+h, col="red")
mtext(groups, at=y, adj=1, side=2, las=2)
par(cex.axis=0.5, mex=0.5)
axis(1, at=ticks, labels=abs(ticks), pos=0)
tw <- 1.5*strwidth("females")
rect(-tw, -1-h, tw, -1+h, col="blue")
rect(0, -1-h, tw, -1+h, col="red")
text(-0.5,-1,"males", pos=2, col="white")
text(0.5,-1,"females", pos=4, col="white")
detach(grid)
detach("package:grid")
library(grid)
plot.new()
pushViewport(viewport(xscale=c(0, 1), yscale=c(0.5, 1),
clip=TRUE))
res <- 50
for (i in 1:res)
grid.rect(y=1 - (i-1)/res, just="top",
gp=gpar(col=NULL, fill=grey(0.5*i/res)))
moon <- function(x, y, size) {
angle <- seq(-90, 90, length=50)/180*pi
x1 <- x + size*cos(angle)
y1 <- y + size*sin(angle)
mod <- 0.8
x2 <- x + mod*(x1 - x)
grid.polygon(c(x1, rev(x2)), c(y1, rev(y1)),
default.unit="native",
gp=gpar(col=NULL, fill="white"))
}
moon(.1, .9, .03)
star <- function(x, y, size) {
x1 <- c(x,           x + size*.1, x + size*.5, x + size*.1,
x,           x - size*.1, x - size*.5, x - size*.1) + .05
y1 <- c(y - size,    y - size*.1, y,           y + size*.1,
y + size*.7, y + size*.1, y,           y - size*.1) + .05
grid.polygon(x1, y1,
default.unit="native",
gp=gpar(col=NULL, fill="white"))
}
star(.5, .7, .02)
star(.8, .9, .02)
star(.72, .74, .02)
star(.62, .88, .02)
grid.circle(runif(20, .2, 1), runif(20, .6, 1), r=.002,
default.unit="native",
gp=gpar(col=NULL, fill="white"))
hill <- function(height=0.1, col="black") {
n <- 100
x <- seq(0, 1, length=n)
y1 <- sin(runif(1) + x*2*pi)
y2 <- sin(runif(1) + x*4*pi)
y3 <- sin(runif(1) + x*8*pi)
y <- 0.6 + height*((y1 + y2 + y3)/3)
grid.polygon(c(x, rev(x)), c(y, rep(0, n)),
default.unit="native",
gp=gpar(col=NULL, fill=col))
}
hill()
rdir <- function(n) {
sample(seq(-45, 45, length=10), n)/180*pi
}
grid.text("Once upon a time ...",
x=.15, y=.51, just="bottom",
default.unit="native",
gp=gpar(col="white", fontface="italic", fontsize=10))
popViewport()
#grid.rect()
detach("package:grid")
plot.new()
pushViewport(viewport(xscale=c(0, 1), yscale=c(0.5, 1),
clip=TRUE))
res <- 50
for (i in 1:res)
grid.rect(y=1 - (i-1)/res, just="top",
gp=gpar(col=NULL, fill=grey(0.5*i/res)))
moon <- function(x, y, size) {
angle <- seq(-90, 90, length=50)/180*pi
x1 <- x + size*cos(angle)
y1 <- y + size*sin(angle)
mod <- 0.8
x2 <- x + mod*(x1 - x)
grid.polygon(c(x1, rev(x2)), c(y1, rev(y1)),
default.unit="native",
gp=gpar(col=NULL, fill="white"))
}
moon(.1, .9, .03)
star <- function(x, y, size) {
x1 <- c(x,           x + size*.1, x + size*.5, x + size*.1,
x,           x - size*.1, x - size*.5, x - size*.1) + .05
y1 <- c(y - size,    y - size*.1, y,           y + size*.1,
y + size*.7, y + size*.1, y,           y - size*.1) + .05
grid.polygon(x1, y1,
default.unit="native",
gp=gpar(col=NULL, fill="white"))
}
star(.5, .7, .02)
star(.8, .9, .02)
star(.72, .74, .02)
star(.62, .88, .02)
grid.circle(runif(20, .2, 1), runif(20, .6, 1), r=.002,
default.unit="native",
gp=gpar(col=NULL, fill="white"))
hill <- function(height=0.1, col="black") {
n <- 100
x <- seq(0, 1, length=n)
y1 <- sin(runif(1) + x*2*pi)
y2 <- sin(runif(1) + x*4*pi)
y3 <- sin(runif(1) + x*8*pi)
y <- 0.6 + height*((y1 + y2 + y3)/3)
grid.polygon(c(x, rev(x)), c(y, rep(0, n)),
default.unit="native",
gp=gpar(col=NULL, fill=col))
}
hill()
rdir <- function(n) {
sample(seq(-45, 45, length=10), n)/180*pi
}
grid.text("Once upon a time ...",
x=.15, y=.51, just="bottom",
default.unit="native",
gp=gpar(col="white", fontface="italic", fontsize=10))
popViewport()
#grid.rect()
par(mfrow=c(1,1))
groups <- c("cows","sheep","horses", "elephants","giraffes")
males <- sample(1:10, 5)
females <- sample(1:10, 5)
par(mar=c(0.5,5, 0.5, 1))
plot.new()
plot.window(xlim=c(-10,10), ylim=c(-1.5,5.5))
ticks <- seq(-10,10,5)
y <- 1:5
h <- 0.2
lines(rep(0,2), c(-1.5,5.5), col="grey")
segments(-10,y,10,y, lty="dotted")
rect(-males, y-h, 0, y+h, col="blue")
rect(0,y-h, females, y+h, col="red")
mtext(groups, at=y, adj=1, side=2, las=2)
par(cex.axis=0.5, mex=0.5)
axis(1, at=ticks, labels=abs(ticks), pos=0)
tw <- 1.5*strwidth("females")
rect(-tw, -1-h, tw, -1+h, col="blue")
rect(0, -1-h, tw, -1+h, col="red")
text(-0.5,-1,"males", pos=2, col="white")
text(0.5,-1,"females", pos=4, col="white")
dev.off()
x <- rnorm(1000)
y <- rnorm(1000)
plot(x,y)
plot(x)
par(mfrow=c(1,1))
groups <- c("cows","sheep","horses", "elephants","giraffes")
males <- sample(1:10, 5)
females <- sample(1:10, 5)
par(mar=c(0.5,5, 0.5, 1))
plot.new()
plot.window(xlim=c(-10,10), ylim=c(-1.5,5.5))
ticks <- seq(-10,10,5)
y <- 1:5
h <- 0.2
lines(rep(0,2), c(-1.5,5.5), col="grey")
segments(-10,y,10,y, lty="dotted")
rect(-males, y-h, 0, y+h, col="blue")
rect(0,y-h, females, y+h, col="red")
mtext(groups, at=y, adj=1, side=2, las=2)
par(cex.axis=0.5, mex=0.5)
axis(1, at=ticks, labels=abs(ticks), pos=0)
tw <- 1.5*strwidth("females")
rect(-tw, -1-h, tw, -1+h, col="blue")
rect(0, -1-h, tw, -1+h, col="red")
text(-0.5,-1,"males", pos=2, col="white")
text(0.5,-1,"females", pos=4, col="white")
library(grid)
plot.new()
pushViewport(viewport(xscale=c(0, 1), yscale=c(0.5, 1),
clip=TRUE))
res <- 50
for (i in 1:res)
grid.rect(y=1 - (i-1)/res, just="top",
gp=gpar(col=NULL, fill=grey(0.5*i/res)))
moon <- function(x, y, size) {
angle <- seq(-90, 90, length=50)/180*pi
x1 <- x + size*cos(angle)
y1 <- y + size*sin(angle)
mod <- 0.8
x2 <- x + mod*(x1 - x)
grid.polygon(c(x1, rev(x2)), c(y1, rev(y1)),
default.unit="native",
gp=gpar(col=NULL, fill="white"))
}
moon(.1, .9, .03)
star <- function(x, y, size) {
x1 <- c(x,           x + size*.1, x + size*.5, x + size*.1,
x,           x - size*.1, x - size*.5, x - size*.1) + .05
y1 <- c(y - size,    y - size*.1, y,           y + size*.1,
y + size*.7, y + size*.1, y,           y - size*.1) + .05
grid.polygon(x1, y1,
default.unit="native",
gp=gpar(col=NULL, fill="white"))
}
star(.5, .7, .02)
star(.8, .9, .02)
star(.72, .74, .02)
star(.62, .88, .02)
grid.circle(runif(20, .2, 1), runif(20, .6, 1), r=.002,
default.unit="native",
gp=gpar(col=NULL, fill="white"))
hill <- function(height=0.1, col="black") {
n <- 100
x <- seq(0, 1, length=n)
y1 <- sin(runif(1) + x*2*pi)
y2 <- sin(runif(1) + x*4*pi)
y3 <- sin(runif(1) + x*8*pi)
y <- 0.6 + height*((y1 + y2 + y3)/3)
grid.polygon(c(x, rev(x)), c(y, rep(0, n)),
default.unit="native",
gp=gpar(col=NULL, fill=col))
}
hill()
rdir <- function(n) {
sample(seq(-45, 45, length=10), n)/180*pi
}
grid.text("Once upon a time ...",
x=.15, y=.51, just="bottom",
default.unit="native",
gp=gpar(col="white", fontface="italic", fontsize=10))
popViewport()
#grid.rect()
read.csv("data/homePriceData.csv")
read.csv("data/homePriceData.csv")
prices <- read.csv("data/homePriceData.csv")
summary(prices$price)
x <- rnorm(n=1000, mean=100, sd=5)
hist(x)
djiaPrices <- read.csv("~/Desktop/useR2012/data/djiaPrices.csv")
View(djiaPrices)
setwd("~/Desktop/useR2012/")
library(manipulate)
library(mosaic)
source("mLineFit.R")
setwd("~/Desktop/useR2012/manipulate/")
source("mLineFit.R")
swim <- fetchData("swim100m.csv")
mLineFit(time~year, swim)
dev.off()
mLineFit(time~year, swim)
dev.off()
setwd("~/Desktop/useR2012/manipulate/")
library(manipulate)
library(mosaic)
source("mLineFit.R")
swim <- fetchData("swim100m.csv")
mLineFit(time~year, swim)
dev.off()
